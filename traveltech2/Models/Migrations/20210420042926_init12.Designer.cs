// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using traveltech2.Models.Data;

namespace traveltech2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210420042926_init12")]
    partial class init12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FooterMenusLinks", b =>
                {
                    b.Property<int>("FooterMenusId")
                        .HasColumnType("int");

                    b.Property<int>("LinksId")
                        .HasColumnType("int");

                    b.HasKey("FooterMenusId", "LinksId");

                    b.HasIndex("LinksId");

                    b.ToTable("FooterMenusLinks");
                });

            modelBuilder.Entity("LinksMenuItems", b =>
                {
                    b.Property<int>("LinksId")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemsId")
                        .HasColumnType("int");

                    b.HasKey("LinksId", "MenuItemsId");

                    b.HasIndex("MenuItemsId");

                    b.ToTable("LinksMenuItems");
                });

            modelBuilder.Entity("traveltech2.Models.App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("FooterID")
                        .HasColumnType("int");

                    b.Property<int?>("HeadID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FooterID");

                    b.HasIndex("HeadID");

                    b.ToTable("App");
                });

            modelBuilder.Entity("traveltech2.Models.Footer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Footer");
                });

            modelBuilder.Entity("traveltech2.Models.FooterIcons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("FooterID")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FooterID");

                    b.ToTable("FooterIcons");
                });

            modelBuilder.Entity("traveltech2.Models.FooterMenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("FooterID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FooterID");

                    b.ToTable("FooterMenus");
                });

            modelBuilder.Entity("traveltech2.Models.Head", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Head");
                });

            modelBuilder.Entity("traveltech2.Models.Links", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("traveltech2.Models.MenuItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenusID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenusID");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("traveltech2.Models.Menus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("HeadID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeadID");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("FooterMenusLinks", b =>
                {
                    b.HasOne("traveltech2.Models.FooterMenus", null)
                        .WithMany()
                        .HasForeignKey("FooterMenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("traveltech2.Models.Links", null)
                        .WithMany()
                        .HasForeignKey("LinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LinksMenuItems", b =>
                {
                    b.HasOne("traveltech2.Models.Links", null)
                        .WithMany()
                        .HasForeignKey("LinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("traveltech2.Models.MenuItems", null)
                        .WithMany()
                        .HasForeignKey("MenuItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("traveltech2.Models.App", b =>
                {
                    b.HasOne("traveltech2.Models.Footer", "Footer")
                        .WithMany()
                        .HasForeignKey("FooterID");

                    b.HasOne("traveltech2.Models.Head", "Head")
                        .WithMany()
                        .HasForeignKey("HeadID");

                    b.Navigation("Footer");

                    b.Navigation("Head");
                });

            modelBuilder.Entity("traveltech2.Models.FooterIcons", b =>
                {
                    b.HasOne("traveltech2.Models.Footer", "Footer")
                        .WithMany("FooterIcons")
                        .HasForeignKey("FooterID");

                    b.Navigation("Footer");
                });

            modelBuilder.Entity("traveltech2.Models.FooterMenus", b =>
                {
                    b.HasOne("traveltech2.Models.Footer", "Footer")
                        .WithMany("FooterMenus")
                        .HasForeignKey("FooterID");

                    b.Navigation("Footer");
                });

            modelBuilder.Entity("traveltech2.Models.MenuItems", b =>
                {
                    b.HasOne("traveltech2.Models.Menus", "Menus")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenusID");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("traveltech2.Models.Menus", b =>
                {
                    b.HasOne("traveltech2.Models.Head", "Head")
                        .WithMany("Menus")
                        .HasForeignKey("HeadID");

                    b.Navigation("Head");
                });

            modelBuilder.Entity("traveltech2.Models.Footer", b =>
                {
                    b.Navigation("FooterIcons");

                    b.Navigation("FooterMenus");
                });

            modelBuilder.Entity("traveltech2.Models.Head", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("traveltech2.Models.Menus", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
